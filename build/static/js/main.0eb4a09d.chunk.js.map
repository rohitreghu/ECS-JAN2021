{"version":3,"sources":["components/Navbar.js","actions/index.js","components/DisplayBooks.js","components/Pagination.js","components/Home.js","components/Cart.js","components/Checkout.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","cart","searchedTerm","setSearchedTerm","className","to","exact","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","style","width","placeholder","value","onChange","e","target","length","addToCart","book","payload","displayedBooks","toast","useRef","map","title","ref","authors","language_code","rating","average_rating","starRatedColor","starDimension","starSpacing","parseFloat","ratings_count","price","onClick","current","show","severity","summary","life","onAdd","bookID","Pagination","booksPerPage","totalBooks","currentPage","handlePrev","handleNext","paginate","rangeStart","rangeEnd","lastPage","Math","ceil","pageNumbers","i","push","aria-hidden","number","useState","books","setBooks","setDisplayedBooks","setCurrentPage","setRangeEnd","setRangeStart","sortBy","setSortBy","indexOfLastBook","indexOfFirstBook","paginatedBooks","slice","useEffect","a","axios","get","response","data","getBooks","window","scroll","timeoutId","setTimeout","filter","toLocaleLowerCase","includes","toString","clearTimeout","handleSort","event","name","prevValue","sort","b","padding","margin","aria-haspopup","scope","pageNumber","deleteFromCart","deleteOneFromCart","total","quantity","onDelete","emptyCart","setName","email","setEmail","mobNumber","setMobNumber","setState","city","setCity","street","setStreet","zip","setZip","nameError","setNameError","emailError","setEmailError","mobNumberError","setMobNumberError","stateError","setStateError","cityError","setCityError","zipError","setZipError","submitClicked","setSubmitClicked","onInputChange","match","pathname","onSubmit","preventDefault","alert","htmlFor","required","disabled","App","path","component","Home","Cart","Checkout","combineReducers","action","updationDoneAdd","cartAfterAdd","updationDoneDel","cartAferDel","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.0eb4a09d.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Navbar = ({ searchedTerm, setSearchedTerm, cart }) => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark px-5\">\r\n\r\n                <NavLink to=\"./home\" exact className=\"navbar-brand\" href=\"!#\">BookKart</NavLink>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    {setSearchedTerm && (\r\n                        <ul className=\"navbar-nav m-auto\" style={{width:\"50%\"}}>\r\n                            <input\r\n                                className=\"form-control mr-sm-2\"\r\n                                type=\"search\" placeholder=\"Search\"\r\n                                value={searchedTerm}\r\n                                onChange={e => setSearchedTerm(e.target.value)}\r\n                            />\r\n                        </ul>\r\n                    )}\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <NavLink to=\"/cart\" exact className=\"nav-item active\"><span className=\"nav-link p-0\">\r\n                            <i className=\"fas fa-shopping-cart fa-2x\"></i>\r\n                            <span className='badge badge-warning' id='lblCartCount'>{cart.length}</span>\r\n                        </span></NavLink>\r\n                    </ul>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","export const addToCart = (book) => {\r\n    return {\r\n        type: \"ADD_TO_CART\",\r\n        payload: book\r\n    };\r\n};\r\n\r\nexport const deleteOneFromCart = (book) => {\r\n    return {\r\n        type: \"DELETE_ONE_FROM_CART\",\r\n        payload: book\r\n    };\r\n};\r\n\r\nexport const deleteFromCart = (book)  => {\r\n    return {\r\n        type: \"DELETE_FROM_CART\",\r\n        payload: book\r\n    };\r\n};\r\n\r\nexport const emptyCart = () => {\r\n    return {\r\n        type: \"EMPTY_CART\"\r\n    };\r\n};","import React, { useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport { Toast } from 'primereact/toast';\r\n\r\nimport 'primereact/resources/themes/saga-green/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport { addToCart } from \"../actions\";\r\n\r\nconst DisplayBooks = ({ displayedBooks, addToCart, cart }) => {\r\n    const toast = useRef(null);\r\n\r\n    const onAdd = (book) => {\r\n        addToCart(book);\r\n        toast.current.show({ severity: 'info', summary: 'Book Added to Cart', life: 2000 });\r\n    }\r\n\r\n\r\n    return (\r\n        displayedBooks.map((book) => {\r\n            return (\r\n                <tr key={book.bookID}>\r\n                    <td>{book.title}<Toast ref={toast} /></td>\r\n                    <td>{book.authors}</td>\r\n                    <td>{book.language_code}</td>\r\n                    <td>\r\n                        <h6 className=\"badge\">\r\n                            <StarRatings\r\n                                rating={typeof book.average_rating === \"number\" ? book.average_rating : 0}\r\n                                starRatedColor=\"#0275d8\"\r\n                                starDimension='15px'\r\n                                starSpacing='0'\r\n                            />\r\n                        </h6>\r\n\r\n                        <h6><span className=\"badge badge-warning\">{parseFloat(book.ratings_count)}</span></h6>\r\n                    </td>\r\n                    <td ><span>₹&nbsp;{book.price}</span></td>\r\n                    <td><button className=\"btn btn-primary\" onClick={() => onAdd(book)}>Add</button></td>\r\n                    \r\n                </tr>\r\n            );\r\n        })\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addToCart: addToCart })(DisplayBooks);","import React from \"react\";\r\n\r\nconst Pagination = ({ booksPerPage, totalBooks, currentPage, handlePrev, handleNext, paginate, rangeStart, rangeEnd }) => {\r\n    const lastPage = Math.ceil(totalBooks / booksPerPage)\r\n    const pageNumbers = [];\r\n\r\n    //setting page number array only when total number of pages is less than 7, ie.e no need for ellipsis\r\n    if (lastPage < 7) {\r\n        for (let i = 1; i <= lastPage; i++) {\r\n            pageNumbers.push(i)\r\n        }\r\n    }\r\n\r\n    // When no books are present for the search result\r\n    if (totalBooks === 0){\r\n        return <div className=\"mx-auto\">No Books Found</div>\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            {lastPage > 6 ? ( // case 1 is when total pages is greater than 6\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className={`page-item ${currentPage === 1 ? 'disabled' : null}`}>\r\n                        <button onClick={handlePrev} className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <button onClick={() => paginate(1)} className={1 === currentPage ? `btn btn-dark` : 'page-link'} href=\"#\">1</button>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        {currentPage < 5 ? (\r\n                            <button className={2 === currentPage ? `btn btn-dark` : 'page-link'} onClick={() => paginate(2)}>2</button>\r\n                        ) : (\r\n                            <button onClick={handlePrev} className=\"page-link\" href=\"#\">\r\n                                <span>...</span>\r\n                            </button>\r\n                        )}\r\n                    </li>\r\n\r\n                    <li className=\"page-item\">\r\n                        <button className={rangeStart === currentPage ? `btn btn-dark` : 'page-link'} onClick={() => paginate(rangeStart)}>{rangeStart}</button>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <button className={rangeStart + 1 === currentPage ? `btn btn-dark` : 'page-link'} onClick={() => paginate(rangeStart + 1)}>{rangeStart + 1}</button>\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <button className={rangeEnd === currentPage ? `btn btn-dark` : 'page-link'} onClick={() => paginate(rangeEnd)}>{rangeEnd}</button>\r\n                    </li>\r\n\r\n                    <li className=\"page-item\">\r\n                        {currentPage > lastPage - 4 ? (\r\n                            <button className={lastPage - 1 === currentPage ? `btn btn-dark` : 'page-link'} onClick={() => paginate(lastPage - 1)}>{lastPage - 1}</button>\r\n                        ) : (\r\n                            <button onClick={handleNext} className=\"page-link\" href=\"#\">\r\n                                <span>...</span>\r\n                            </button>\r\n                        )}\r\n                    </li>\r\n                    <li className=\"page-item\">\r\n                        <button onClick={() => paginate(lastPage)} className={lastPage === currentPage ? `btn btn-dark` : 'page-link'} href=\"#\">{lastPage}</button>\r\n                    </li>\r\n                    <li className={`page-item ${currentPage === lastPage ? 'disabled' : null}`}>\r\n                        <button onClick={handleNext} className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            ) : ( // 2nd case for whn the total pages is less than 7\r\n                <ul className=\"pagination justify-content-center\">\r\n                    <li className={`page-item ${currentPage === 1 ? 'disabled' : null}`}>\r\n                        <button onClick={handlePrev} className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </button>\r\n                    </li>\r\n                    {pageNumbers.map((number) => {\r\n                        return (\r\n                            <li key={number} className=\"page-item\">\r\n                                <button className={number === currentPage ? \"btn btn-dark\" : \"page-link\"} onClick={() => paginate(number)} >{number}</button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n\r\n                    <li className={`page-item ${currentPage === lastPage ? 'disabled' : null}`}>\r\n                        <button onClick={handleNext} className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            )}\r\n\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport DisplayBooks from \"./DisplayBooks\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst Home = ({ cart }) => {\r\n    const [books, setBooks] = useState([]);\r\n    const [displayedBooks, setDisplayedBooks] = useState([]);\r\n    const [searchedTerm, setSearchedTerm] = useState(\"\");\r\n\r\n    //states for pagenation\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [booksPerPage] = useState(10);\r\n    const [rangeEnd, setRangeEnd] = useState(5);\r\n    const [rangeStart, setRangeStart] = useState(3);\r\n\r\n    //states for sorting\r\n    const [sortBy, setSortBy] = useState(\"Featured\");\r\n\r\n\r\n    const indexOfLastBook = currentPage * booksPerPage;\r\n    const indexOfFirstBook = indexOfLastBook - booksPerPage;\r\n    const paginatedBooks = (displayedBooks.slice(indexOfFirstBook, indexOfLastBook))\r\n\r\n    const url = \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/books8f8fe52.json\";\r\n\r\n    useEffect(() => {\r\n        const getBooks = async () => {\r\n            const response = await axios.get(url);\r\n            setBooks(response.data);\r\n        }\r\n        getBooks();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const lastPage = Math.ceil(displayedBooks.length / booksPerPage)\r\n        window.scroll(0, 0);\r\n\r\n        if (currentPage === 1) {\r\n            setRangeStart(3);\r\n            setRangeEnd(5);\r\n        } else if (currentPage >= 4 && currentPage < lastPage - 2) {\r\n            setRangeStart(currentPage - 1);\r\n            setRangeEnd(currentPage + 1)\r\n        } else if (currentPage === lastPage) {\r\n            setRangeStart(lastPage - 4);\r\n            setRangeEnd(lastPage - 2);\r\n        }\r\n    }, [currentPage, booksPerPage, displayedBooks]);\r\n\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            if (searchedTerm) {\r\n                setDisplayedBooks(books.filter((book) => {\r\n                    if (typeof book.title === 'string') {\r\n                        return book.title.toLocaleLowerCase().includes(searchedTerm.toLocaleLowerCase());\r\n                    } else {\r\n                        return toString(book.title).toLocaleLowerCase().includes(searchedTerm.toLocaleLowerCase());\r\n                    }\r\n                }));\r\n            } else {\r\n                setDisplayedBooks(books);\r\n            }\r\n            setCurrentPage(1);\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n        }\r\n    }, [searchedTerm, books]);\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n        const lastPage = Math.ceil(displayedBooks.length / booksPerPage)\r\n        if (pageNumber > 4 && pageNumber < lastPage - 2) {\r\n            setRangeStart(pageNumber - 1);\r\n            setRangeEnd(pageNumber + 1)\r\n        } else if (pageNumber === lastPage) {\r\n            setRangeStart(lastPage - 4);\r\n            setRangeEnd(lastPage - 2);\r\n        } else if (pageNumber === 1) {\r\n            setRangeStart(3);\r\n            setRangeEnd(5);\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n    const handlePrev = () => {\r\n        setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    const handleSort = (event) => {\r\n        const { name } = event.target;\r\n\r\n        setCurrentPage(1);\r\n        setSortBy(name);\r\n\r\n        switch (name) {\r\n            case \"Price: Low to High\":\r\n                setDisplayedBooks(prevValue => prevValue.sort((a, b) => a.price - b.price));\r\n                break;\r\n            case \"Price: High to Low\":\r\n                setDisplayedBooks(prevValue => prevValue.sort((a, b) => b.price - a.price));\r\n                break;\r\n            case \"Avg. Cutomer Ratings\":\r\n                setDisplayedBooks(prevValue => prevValue.sort((a, b) => b.average_rating - a.average_rating));\r\n                break;\r\n            case \"No. of Customer Ratings\":\r\n                setDisplayedBooks(prevValue => prevValue.sort((a, b) => b.ratings_count - a.ratings_count));\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <Navbar searchedTerm={searchedTerm} setSearchedTerm={setSearchedTerm} />\r\n            <div className=\"container-fluid\" style={{padding: \"0 4%\"}}>\r\n                <div style={{margin:\"1% 0 0 0\"}}>\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-warning btn-sm dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Sort by: {sortBy}\r\n                        </button>\r\n                        <div className=\"dropdown-menu\">\r\n                            <button onClick={handleSort} name=\"Price: Low to High\" className=\"dropdown-item\">Price: Low to High</button>\r\n                            <button onClick={handleSort} name=\"Price: High to Low\" className=\"dropdown-item\">Price: High to Low</button>\r\n                            <button onClick={handleSort} name=\"Avg. Cutomer Ratings\" className=\"dropdown-item\">Avg. Cutomer Ratings</button>\r\n                            <button onClick={handleSort} name=\"No. of Customer Ratings\" className=\"dropdown-item\">No. of Customer Ratings</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"container-fluid\" style={{ padding: \"1% 5%\" }}>\r\n\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\">Author</th>\r\n                                <th scope=\"col\">Language</th>\r\n                                <th id=\"rating\" scope=\"col\">Rating</th>\r\n                                <th id=\"price\" scope=\"col\">Price</th>\r\n                                <th scope=\"col\">Buy</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <DisplayBooks displayedBooks={paginatedBooks} />\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <Pagination\r\n                    booksPerPage={booksPerPage}\r\n                    totalBooks={displayedBooks.length}\r\n                    currentPage={currentPage}\r\n                    handleNext={handleNext}\r\n                    handlePrev={handlePrev}\r\n                    paginate={paginate}\r\n                    rangeStart={rangeStart}\r\n                    rangeEnd={rangeEnd}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);","import React, { Fragment, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Toast } from 'primereact/toast';\r\n\r\nimport 'primereact/resources/themes/saga-green/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\n\r\nimport { addToCart, deleteOneFromCart, deleteFromCart } from \"../actions\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Cart = ({ cart, addToCart, deleteFromCart, deleteOneFromCart }) => {\r\n    const toast = useRef(null);\r\n\r\n    var total = 0;\r\n\r\n    for (let i = 0; i < cart.length; i++) {\r\n        total += (cart[i][\"price\"] * cart[i][\"quantity\"])\r\n    }\r\n\r\n    const onDelete = (book) => {\r\n        deleteFromCart(book);\r\n        toast.current.show({ severity: 'error', summary: 'Book Removed From Cart', life: 2000 });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Toast ref={toast} />\r\n            <div className=\"container-fluid\" style={{ padding: \"1% 5%\" }}>\r\n\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <p className=\"display-4\">Order Summary</p>\r\n                </div>\r\n\r\n                {cart.length > 0 ? (\r\n                    <div>\r\n                        <div>\r\n                            \r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    {cart.map((book) => {\r\n                                        return (\r\n                                            <Fragment key={book.bookID}>\r\n                                                <tr className=\"row\">\r\n                                                    <td className=\"col-6\">\r\n                                                        <div className=\"bold\"><strong>Book Title:</strong></div>\r\n                                                        <div>{book.title}</div>\r\n                                                    </td>\r\n                                                    <td className=\"col-2\">\r\n                                                        <div className=\"d-flex justify-content-center\">Price:&nbsp;₹&nbsp;{book.price}</div>\r\n                                                        <div className=\"d-flex justify-content-center\">SubTotal&nbsp;:&nbsp;₹{book.price * book.quantity}</div>\r\n\r\n                                                    </td>\r\n                                                    {/* <td><button onClick={() => deleteOneFromCart(book)}>-</button></td> */}\r\n                                                    <td className=\"col-4 \">\r\n                                                        <div className=\"d-flex justify-content-center\">\r\n                                                            <button className=\"btn btn-primary btn-sm\" onClick={() => deleteOneFromCart(book)}>-</button>\r\n                                                            <span style={{ padding: \"0 8%\" }}>{book.quantity}</span>\r\n                                                            <button className=\"btn btn-primary btn-sm\" onClick={() => addToCart(book)}>+</button>\r\n                                                        </div>\r\n                                                        <div className=\"d-flex justify-content-center\" style={{ padding: \"4% 0 1% 0\" }}>\r\n                                                            <button className=\"btn btn-danger btn-sm\" onClick={() => onDelete(book)}><i className=\"far fa-trash-alt\"></i></button>\r\n                                                        </div>\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n\r\n                                            </Fragment>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div className=\"row\" style={{ padding: \"3% 0\" }}>\r\n                            <div className=\"col-2\">\r\n                                <h6 className=\"text-danger\">*Shipping:&nbsp;FREE!</h6>\r\n                            </div>\r\n                            <div className=\"col-4 offset-6\">\r\n                                <h5 className=\"d-flex justify-content-center\">Total:&nbsp;₹&nbsp;{total}</h5>\r\n                                <div className=\"pt-2 d-flex justify-content-center\"><NavLink className=\"btn btn-primary btn-lg\" to=\"/checkout\" exact>Checkout</NavLink></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n\r\n                        <h5 className=\"d-flex justify-content-center text-danger\">Cart Empty!</h5>\r\n                        <div className=\"pt-2 d-flex justify-content-center\"><NavLink className=\"btn btn-primary btn-lg\" to=\"/home\" exact>Back to Books</NavLink></div>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    addToCart: addToCart, deleteFromCart: deleteFromCart, deleteOneFromCart: deleteOneFromCart\r\n})(Cart);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport { emptyCart } from \"../actions\"\r\n\r\nconst Checkout = ({ cart, emptyCart }) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [mobNumber, setMobNumber] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [zip, setZip] = useState(\"\");\r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [mobNumberError, setMobNumberError] = useState(\"\");\r\n    const [stateError, setStateError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n    const [zipError, setZipError] = useState(\"\");\r\n\r\n    const [submitClicked, setSubmitClicked] = useState(false);\r\n\r\n    var total = 0;\r\n    var quantity = 0;\r\n\r\n    for (let i = 0; i < cart.length; i++) {\r\n        quantity += cart[i][\"quantity\"];\r\n        total += (cart[i][\"quantity\"] * cart[i][\"price\"])\r\n    }\r\n\r\n    const onInputChange = (event) => {\r\n        const { id, value } = event.target;\r\n\r\n        if (id === \"name\") {\r\n            setName(value);\r\n            if (value.length > 0 && value.length < 4) {\r\n                setNameError(\"Name should have atleast 4 characters\")\r\n            } else {\r\n                setNameError(\"\");\r\n            }\r\n        } else if (id === \"state\") {\r\n            setState(value);\r\n            if (value.length > 0 && value.length < 4) {\r\n                setStateError(\"State should have atleast 4 characters\")\r\n            } else {\r\n                setStateError(\"\");\r\n            }\r\n        } else if (id === \"city\") {\r\n            setCity(value);\r\n            if (value.length > 0 && value.length < 4) {\r\n                setCityError(\"City should have atleast 4 characters\")\r\n            } else {\r\n                setCityError(\"\");\r\n            }\r\n        } else if (id === \"email\") {\r\n            setEmail(value)\r\n            if (!value.match(/(.+)@(.+){2,}\\.(.+){2,}/) && value.length > 0) {\r\n                setEmailError(\"Enter a valid email address\");\r\n            } else {\r\n                setEmailError(\"\");\r\n            }\r\n        } else if (id === \"mobNumber\") {\r\n            setMobNumber(value);\r\n            if (value.length !== 10 && value.length > 0) {\r\n                setMobNumberError(\"Enter valid mobile number\");\r\n            } else {\r\n                setMobNumberError(\"\");\r\n            }\r\n        } else if (id === \"zip\") {\r\n            setZip(value);\r\n            if (value.length !== 6 && value.length !== 0) {\r\n                setZipError(\"Enter valid Zip Code\")\r\n            } else {\r\n                setZipError(\"\");\r\n            }\r\n        } else {\r\n            setStreet(value);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        window.alert(\"Order Successful\");\r\n\r\n        emptyCart();\r\n        setSubmitClicked(true);\r\n    }\r\n\r\n    if (submitClicked || cart.length === 0) {\r\n        return <Redirect to={{ pathname: \"/home\" }} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-8 offset-lg-2 col-md-10 offset-md-1 col-sm-12\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"card my-5\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">Customer Details</h5>\r\n                                    <div className=\"card-text\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                id=\"name\"\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Name\"\r\n                                                required\r\n                                                value={name}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {nameError && <div className=\"alert alert-danger\">{nameError}</div>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"email\">Email<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                id=\"email\"\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Email Address\"\r\n                                                required\r\n                                                value={email}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {emailError && <div className=\"alert alert-danger\">{emailError}</div>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"mobNumber\">Mobile Number<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                id=\"mobNumber\"\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Mobile Number\"\r\n                                                required\r\n                                                value={mobNumber}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {mobNumberError && <div className=\"alert alert-danger\">{mobNumberError}</div>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                    <h5 className=\"card-title mt-4\">Shipping Address</h5>\r\n                                    <div className=\"card-text\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"country\">Country<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                value=\"India\"\r\n                                                disabled={true}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"state\">State<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"state\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"State\"\r\n                                                required\r\n                                                value={state}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {stateError && <div className=\"alert alert-danger\">{stateError}</div>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"city\">City<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                id=\"city\"\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"City\"\r\n                                                required\r\n                                                value={city}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {cityError && <div className=\"alert alert-danger\">{cityError}</div>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"street\">House No./Street</label>\r\n                                            <input\r\n                                                id=\"street\"\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"House No./Street\"\r\n                                                value={street}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"zip\">Zip Code<span className=\"text-danger\">*</span></label>\r\n                                            <input\r\n                                                id=\"zip\"\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Zip Code\"\r\n                                                required\r\n                                                value={zip}\r\n                                                onChange={onInputChange}\r\n                                            />\r\n                                            {zipError && <div className=\"alert alert-danger\">{zipError}</div>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                    <h5 className=\"card-title mt-4 mb-3\">Order Details</h5>\r\n                                    <div>Total Quantity: {quantity}</div>\r\n                                    <div className=\"text-danger\">*Shipping: Free</div>\r\n                                    <h5>Total Price: ₹ {total}</h5>\r\n                                    <hr />\r\n\r\n                        \r\n                                    <div>\r\n                                        <button\r\n                                            disabled={nameError || emailError || mobNumberError || stateError || cityError || zipError ? true : false}\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary btn-lg mt-2\"\r\n                                        >\r\n                                            Confirm Order\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.cart\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { emptyCart: emptyCart })(Checkout);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './Home';\r\nimport Cart from './Cart';\r\nimport Checkout from './Checkout';\r\n// import Home from './temp';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/home' component={Home} />\r\n                <Route exact path='/cart' component={Cart} />\r\n                <Route exact path='/checkout' component={Checkout}/>\r\n                <Route path='/' component={Home} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\n\r\nconst cartReducer = (cart = [], action) => {\r\n    const { payload } = action;\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\":\r\n            var updationDoneAdd = false\r\n            const cartAfterAdd = cart.map((book) => {\r\n                if (book.title === payload.title) {\r\n                    book.quantity += 1\r\n                    updationDoneAdd = true;\r\n                }\r\n                return book\r\n            })\r\n            \r\n            if (!updationDoneAdd){\r\n                payload.quantity = 1\r\n                return [...cart, payload]\r\n            } else {\r\n                return cartAfterAdd\r\n            }\r\n        case \"DELETE_ONE_FROM_CART\":\r\n            var updationDoneDel = false;\r\n\r\n            const cartAferDel = cart.map((book) => {\r\n                if (book.title === payload.title){\r\n                    if (book.quantity > 1) {\r\n                        book.quantity -= 1;\r\n                        updationDoneDel = true;\r\n                    }\r\n                }\r\n                return book\r\n            })\r\n\r\n            if (!updationDoneDel){\r\n                return cart.filter((book) => {\r\n                    return book.title !== payload.title;\r\n                })\r\n            } else {\r\n                return cartAferDel;\r\n            }\r\n            \r\n        case \"DELETE_FROM_CART\":\r\n            return cart.filter((book) => {\r\n                return book.title !== payload.title;\r\n            })\r\n        case \"EMPTY_CART\":\r\n            return []\r\n        default:\r\n            return cart;\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    cart: cartReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from \"./reducers\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}